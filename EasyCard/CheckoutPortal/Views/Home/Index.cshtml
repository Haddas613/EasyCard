@using Shared.Helpers
@{
    ViewData["Title"] = "EasyCard";
}
@model ChargeViewModel
@inject CommonLocalizationService localizer


<form asp-action="CancelPayment" method="post" hidden id="cancel-form">
    <input type="hidden" asp-for="RedirectUrl" id="RedirectUrlHidden" />
    <input type="hidden" asp-for="PaymentRequest" id="PaymentRequestHidden" />
    <input type="hidden" asp-for="PaymentIntent" id="PaymentIntent" />
    <input type="hidden" asp-for="ApiKey" id="ApiKeyHidden" />
    <input type="hidden" asp-for="Currency" id="CurrencyHidden" />
    <input type="hidden" asp-for="Description" id="DescriptionHidden" />
    <input type="hidden" asp-for="ConsumerID" id="ConsumerIDHidden" />
</form>


<div class="row justify-content-center">
    <div class="col-md-6">
        <div class="panel panel-default">

            <partial name="_ValidationSummary" />

            <div class="panel-heading">
                <p class="px-2">@Model.Description</p>
                @*@if (Model.NumberOfPayments > 1)
        {
            <ul class="list-group px-2">
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    @localizer.Get("NumberOfPayments")
                    <span class="text-end">
                        <b>@Model.NumberOfPayments</b>
                    </span>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    @localizer.Get("InitialPayment")
                    <span class="text-end">
                        <b>@Model.InitialPaymentAmount?.ToString("N")@Model.Currency.GetCurrencySymbol()</b>
                    </span>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    @localizer.Get("PaymentAmount")
                    <span class="text-end">
                        <b>@Model.InstallmentPaymentAmount?.ToString("N")@Model.Currency.GetCurrencySymbol()</b>
                    </span>
                    <span class="badge badge-primary badge-pill"></span>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    @localizer.Get("Total")
                    <span class="text-end">
                        <b>@Model.TotalAmount?.ToString("N")@Model.Currency.GetCurrencySymbol()</b>
                    </span>
                </li>
            </ul>
        }*@
            </div>


            <div class="panel-body">

                <form asp-action="Charge" method="post" id="checkout-form">
                    <input type="hidden" asp-for="RedirectUrl" />
                    <input type="hidden" asp-for="PaymentRequest" />
                    <input type="hidden" asp-for="PaymentIntent" />
                    <input type="hidden" asp-for="ApiKey" />
                    <input type="hidden" asp-for="Currency" />
                    <input type="hidden" asp-for="Description" />
                    <input type="hidden" asp-for="ConsumerID" />
                    <input type="hidden" asp-for="IssueInvoice" />
                    <input type="hidden" asp-for="AllowPinPad" />
                    @if (Model.Amount.GetValueOrDefault() > 0)
                    {
                        <input type="hidden" asp-for="Amount" />

                        @if (Model.TransactionTypes.Count() > 1)
                        {
                            <div class="form-group">
                                <label for="number-of-payments">@localizer.Get("TransactionType")</label>
                                <select class="form-control" id="ttype" asp-for="TransactionType">
                                    @foreach (var t in Model.TransactionTypes)
                                    {
                                        <option selected="@(Model.TransactionType == t)" value="@t">@localizer.Get(t.ToString())</option>
                                    }
                                </select>
                                <span asp-validation-for="TransactionType"></span>
                            </div>
                            <ul class="list-group px-2" id="installments-area" hidden="@(Model.TransactionType == Shared.Integration.Models.TransactionTypeEnum.RegularDeal)">
                                <li class="list-group-item">
                                    <div class="form-group">
                                        <label for="number-of-payments">@localizer.Get("NumberOfPayments")</label>
                                        <select class="form-control" id="number-of-payments" asp-for="NumberOfPayments">
                                            @for (var i = Model.MinInstallments; i <= Model.MaxCreditInstallments; i++)
                                            {
                                                <option selected="@(i == Model.NumberOfPayments)" value="@i">@i</option>
                                            }
                                        </select>
                                        <span asp-validation-for="NumberOfPayments"></span>
                                    </div>
                                </li>
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    @localizer.Get("PaymentAmount")
                                    <span class="text-end">
                                        <b id="payment-amount">@Model.InstallmentPaymentAmount?.ToString("N")@Model.Currency.GetCurrencySymbol()</b>
                                    </span>
                                    <span class="badge badge-primary badge-pill"></span>
                                </li>
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    @localizer.Get("Total")
                                    <span class="text-end">
                                        <b>@(Model.TotalAmount?.ToString("N") ?? Model.Amount?.ToString("N"))@Model.Currency.GetCurrencySymbol()</b>
                                    </span>
                                </li>
                            </ul>
                        }

                        <h3 id="total-amount-display" hidden="@(Model.TransactionType != Shared.Integration.Models.TransactionTypeEnum.RegularDeal)" class="panel-title text-center @(Model.IsRefund ? "text-danger" : "")">
                            @(Model.IsRefund ? localizer.Get("Refund") : localizer.Get("Amount")): @Model.Amount.GetValueOrDefault().ToString("F2")@Model.Currency.GetCurrencySymbol()
                        </h3>
                    }

                    @if (!(Model.Amount.GetValueOrDefault() > 0) || Model.SavedTokens?.Count() > 0)
                    {
                        <fieldset class="border rounded p-2 m-2">
                            @if (!(Model.Amount.GetValueOrDefault() > 0))
                            {
                                <div class="form-group row">
                                    <label asp-for="Amount" class="col-sm-3 col-form-label col-form-label-sm">@localizer.Get("Amount") (@Model.Currency.GetCurrencySymbol())</label>
                                    <div class="col-sm-9">
                                        <input type="tel" class="form-control form-control-sm" placeholder="@localizer.Get("Amount")" asp-for="Amount" autocomplete="off">
                                        <span asp-validation-for="Amount"></span>
                                    </div>
                                </div>
                            }
                            @if (Model.SavedTokens?.Count() > 0)
                            {
                                <div class="form-group row">
                                    <label asp-for="CreditCardToken" class="col-sm-3 col-form-label col-form-label-sm">@localizer.Get("UseSavedCard")</label>
                                    <div class="col-sm-9">

                                        <div class="form-check">
                                            @foreach (var savedToken in Model.SavedTokens)
                                            {
                                                <input class="form-check-input" type="radio" asp-for="CreditCardToken" value="@savedToken.Key" />
                                                <span dir="ltr">@savedToken.Value</span>
                                                <br />
                                            }
                                            <input class="form-check-input" type="radio" asp-for="CreditCardToken" value="@(null)" checked />@localizer.Get("EnterNewCard")<br />
                                        </div>

                                    </div>
                                </div>
                            }
                        </fieldset>
                    }
                    else if (Model.Amount.GetValueOrDefault() == 0)
                    {
                        <fieldset class="border rounded p-2 m-2">
                            <div class="form-group row">
                                <label asp-for="Amount" class="col-sm-3 col-form-label col-form-label-sm">@localizer.Get("Amount") (@Model.Currency.GetCurrencySymbol())</label>
                                <div class="col-sm-9">
                                    <input type="tel" class="form-control form-control-sm" placeholder="@localizer.Get("Amount")" asp-for="Amount" autocomplete="off">
                                    <span asp-validation-for="Amount"></span>
                                </div>
                            </div>
                        </fieldset>
                    }
                    <fieldset class="border rounded p-2 m-2" id="card-info-group-area">
                        @if (Model.AllowPinPad ?? false)
                        {
                            <div class="form-group row mb-0">
                                <label class="fcol-form-label col-form-label-sm col-sm-3" asp-for="PinPad">@localizer.Get("MakePinPadDeal")</label>
                                <div class="col-sm-9">
                                    <div class="form-check">
                                        <input id="pin-pad-deal" type="checkbox" class="form-check-input" asp-for="PinPad">
                                        <span asp-validation-for="PinPad"></span>
                                    </div>
                                </div>
                            </div>
                            @if (Model.PinPadDevices?.Any() == true)
                            {
                                <div class="form-group p-2" id="pin-pad-devices" hidden="@(Model.PinPadDeviceID == null)">
                                    <select class="form-control" id="device" asp-for="PinPadDeviceID">
                                        @foreach (var t in Model.PinPadDevices)
                                        {
                                            <option selected="@(Model.PinPadDeviceID == t.DeviceID)" value="@t.DeviceID">@(t.DeviceID)-@(t.DeviceName)</option>
                                        }
                                    </select>
                                    <span asp-validation-for="PinPadDeviceID"></span>
                                </div>
                            }
                        }
                        <div id="credit-card-info-area">
                            <div class="form-group row">
                                <label asp-for="CardNumber" class="col-sm-3 col-form-label col-form-label-sm">@localizer.Get("CardNumber")</label>
                                <div class="col-sm-9">
                                    <input id="cc-number" type="tel" class="form-control cc-number form-control-sm" asp-for="CardNumber" autofocus autocomplete="cc-number" placeholder="•••• •••• •••• ••••">
                                    <span asp-validation-for="CardNumber"></span>
                                    <span class="control-validation"></span>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label asp-for="CardExpiration" class="col-sm-3 col-form-label col-form-label-sm">@localizer.Get("Expiration")</label>
                                <div class="col-sm-9">
                                    <input id="cc-exp" type="tel" class="form-control cc-exp form-control-sm" placeholder="••/••" asp-for="CardExpiration" autocomplete="cc-exp">
                                    <span asp-validation-for="CardExpiration"></span>
                                    <span class="control-validation"></span>
                                </div>
                            </div>

                            <div class="form-group row">
                                <label asp-for="Cvv" class="col-sm-3 col-form-label col-form-label-sm">@localizer.Get("CVV")</label>
                                <div class="col-sm-9">
                                    <input type="tel" class="form-control cc-cvc form-control-sm" placeholder="•••" asp-for="Cvv" autocomplete="off">
                                    <span asp-validation-for="Cvv"></span>
                                    <span class="control-validation"></span>
                                </div>
                            </div>

                            @if (Model.ConsumerID.HasValue)
                            {
                                <div class="form-group row">
                                    <label class="fcol-form-label col-form-label-sm col-sm-3" asp-for="SaveCreditCard">@localizer.Get("SaveCard")</label>
                                    <div class="col-sm-9">
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" asp-for="SaveCreditCard">
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </fieldset>
                    <fieldset class="border rounded p-2 m-2">
                        <div class="form-group row">
                            <label asp-for="Name" class="col-sm-3 col-form-label col-form-label-sm">@localizer.Get("CardOwnerName")</label>
                            <div class="col-sm-9">
                                <input class="form-control form-control-sm" placeholder="@localizer.Get("CardOwnerName")" asp-for="Name" autocomplete="off">
                                <span asp-validation-for="Name"></span>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label asp-for="Email" class="col-sm-3 col-form-label col-form-label-sm">@localizer.Get("Email")</label>
                            <div class="col-sm-9">
                                <input type="email" class="form-control form-control-sm" placeholder="@localizer.Get("Email")" asp-for="Email" autocomplete="off">
                                <span asp-validation-for="Email"></span>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label asp-for="NationalID" class="col-sm-3 col-form-label col-form-label-sm">@localizer.Get("NationalID")</label>
                            <div class="col-sm-9">
                                <input type="tel" class="form-control form-control-sm" placeholder="@localizer.Get("NationalID")" asp-for="NationalID" autocomplete="off">
                                <span asp-validation-for="NationalID"></span>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label asp-for="Phone" class="col-sm-3 col-form-label col-form-label-sm">@localizer.Get("Phone")</label>
                            <div class="col-sm-9">
                                <input type="tel" class="form-control form-control-sm" placeholder="@localizer.Get("Phone")" asp-for="Phone" autocomplete="off">
                                <span asp-validation-for="Phone"></span>
                            </div>
                        </div>

                    </fieldset>

                    <div class="form-group d-flex justify-content-end">
                        <button class="btn btn-outline-danger mx-1" id="cancel-btn">
                            @localizer.Get("CancelPayment")
                        </button>
                        @if (Model.IsRefund)
                        {
                            <input class="btn btn-danger" type="submit" name="paybtn" value="@localizer.Get("Refund")" />
                        }
                        else
                        {
                            <input class="btn btn-primary" type="submit" name="paybtn" value="@localizer.Get("PayWithEasyCard")" />
                        }
                    </div>
                </form>
            </div>
        </div>
    </div>

</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script nws-csp-add-nonce="true">
        $(document).ready(function () {
            $('input[name="CreditCardToken"]').on('change', function (e) {
            if (e.target.value == "") {
                $("#card-info-group-area").attr("hidden", false);
            } else {
                $("#card-info-group-area").attr("hidden", true);
            }
            });

            $("#cancel-btn").on('click', function (e) {
                e.preventDefault();
                $('#cancel-form').submit();
            });

            $("#checkout-form").on("submit", function (e) {
                let ccvaltrim = $("#cc-number").val().replace(/ /g, '');
                $("#cc-number").val(ccvaltrim);
                if (document.getElementById("ttype").value == "@Shared.Integration.Models.TransactionTypeEnum.RegularDeal.ToString()") {
                    $("#installments-area").remove();
                }
                if (document.getElementById("pin-pad-deal").checked == true) {
                    $("#credit-card-info-area").remove();
                }
            })

            $("#number-of-payments").on("change", function (e) {
                let newAmount = (@((Model.TotalAmount ?? Model.Amount) ?? 0) / e.target.value).toFixed(2);
                $("#payment-amount").text(newAmount + "@Html.Raw(Model.Currency.GetCurrencySymbol())");
            });

            $("#ttype").on("change", function (e) {
                let value = e.target.value;
                let min = 0; let max = 0;

                if (value == "@Shared.Integration.Models.TransactionTypeEnum.RegularDeal.ToString()") {
                    document.getElementById("installments-area").hidden = true;
                    document.getElementById("total-amount-display").hidden = false;
                    return;
                }
                else if (value == "@Shared.Integration.Models.TransactionTypeEnum.Installments.ToString()") {
                    min = @(Model.MinInstallments ?? 2);
                    max = @(Model.MaxInstallments ?? 12);
                } else {
                    min = @(Model.MinCreditInstallments ?? 3);
                    max = @(Model.MaxCreditInstallments ?? 12);
                }
                
                var select = document.getElementById("number-of-payments");
                select.length = 0;
                for (var i = min; i <= max; i++) {
                    select.options.add(new Option(i, i))
                }
                $("#number-of-payments").trigger("change");
                document.getElementById("total-amount-display").hidden = true;
                document.getElementById("installments-area").hidden = false;
            })
            
            $("#pin-pad-deal").on("change", function (e) {
                document.getElementById("credit-card-info-area").hidden = e.target.checked;
                document.getElementById("pin-pad-devices").hidden = !e.target.checked;
            })
            $("#pin-pad-deal").trigger("change");
        })
    </script>
}
