@model LoginViewModel
@inject CommonLocalizationService localizer

<div class="login-page">
    <div class="page-header text-center">
        @if (Model.IsAuthorized)
        {
            <h1 class="display-4">@localizer.Get("WelcomeToEasyCard")</h1>
            <p>@localizer.Get("LoggedAs").Replace("@as", Model.UserName)</p>
        }
        else
        {
            <h5 class="mb-4">@localizer.Get("LoginToEasyCard")</h5>
        }
    </div>

    <partial name="_ValidationSummary" />

    <div class="row">
        @if (!Model.IsAuthorized)
        {

            <div class="col-sm-12 d-flex justify-content-center">
                @if (Model.EnableLocalLogin)
                {
                    <div class="panel panel-default">
                        @*<div class="panel-heading">
                                <h3 class="panel-title">Local Login</h3>
                            </div>*@
                        <div class="panel-body">

                            <form asp-route="Login">
                                <input type="hidden" asp-for="ReturnUrl" />

                                <fieldset>
                                    <div class="form-group">
                                        <label asp-for="Username">@localizer.Get("Email")</label>
                                        <input class="form-control" placeholder="@localizer.Get("Email")" asp-for="Username" autofocus>
                                        <span asp-validation-for="Username"></span>
                                    </div>
                                    <div class="form-group">
                                        <label asp-for="Password">@localizer.Get("Password")</label>
                                        <input type="password" class="form-control" placeholder="@localizer.Get("Password")" asp-for="Password" autocomplete="off">
                                        <span asp-validation-for="Password"></span>
                                    </div>
                                    <div>
                                        <p class="text-center">
                                            <small>@Html.ActionLink(localizer.Get("FollowThisLinkToJoinEasyCard"), "Index", "Registration")</small>
                                        </p>
                                    </div>
                                    <div class="form-group d-flex justify-content-center">
                                        @*<a asp-action="Index" asp-controller="Registration" class="btn btn-outline-info mx-1">Register</a>*@
                                        <a asp-action="ForgotPassword" asp-controller="Account" class="btn btn-outline-info mx-1">@localizer.Get("ForgotPassword")</a>
                                        <button class="btn btn-primary mx-1" name="button" value="login">@localizer.Get("Login")</button>
                                        @*<button class="btn btn-default" name="button" value="cancel">Cancel</button>*@
                                    </div>



                                </fieldset>
                            </form>

                            <section>
                                <hr />
                                @{
                                    var loginProviders = Model.VisibleExternalProviders;
                                    if (loginProviders.Count() > 0)
                                    {
                                        <p class="text-center">
                                            <small>@localizer.Get("OrLoginByUsingExternalProviders")</small>
                                        </p>
                                        <form asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
                                            <div class="text-center">
                                                @foreach (var provider in loginProviders)
                                                {
                                                    <button type="submit" class="btn btn-sm btn-outline-primary" name="provider" value="@provider.AuthenticationScheme">@provider.DisplayName</button>
                                                }
                                            </div>
                                        </form>
                                    }
                                }
                            </section>
                        </div>
                    </div>
                }
            </div>







            @if (!Model.EnableLocalLogin && !Model.VisibleExternalProviders.Any())
            {
                <div class="alert alert-warning">
                    <strong>Invalid login request</strong>
                    @localizer.Get("ThereAreNoLoginSchemesConfiguredForThisClient")
                </div>
            }
        }
        else
        {
            <div class="col-sm-12 d-flex justify-content-center">
                @if (Model.IsAdmin)
                {
                    <a href="@(Model.ClientSystemURL)" class="btn btn-primary text-white">@localizer.Get("GoToAdminUI")</a>
                }
                else
                {
                    <a href="@(Model.ClientSystemURL)" class="btn btn-primary text-white">@localizer.Get("GoToMerchantUI")</a>
                }
                <a asp-action="Logout" asp-controller="Account" class="btn btn-outline-dark mx-1">@localizer.Get("Logout")</a>
            </div>
        }
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
