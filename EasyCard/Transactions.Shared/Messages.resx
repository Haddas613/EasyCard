<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AggregatorNotDefined" xml:space="preserve">
    <value>Aggregator is not defined</value>
  </data>
  <data name="AllVatCalculationsMustBeSpecified" xml:space="preserve">
    <value>In case if at least one of the following parameters is specified: VatRate, NetTotal, VatTotal, each one must be specified as well (or left null correspondingly). These parameters are mutually dependend</value>
  </data>
  <data name="AmountRequiredForPinpadDeal" xml:space="preserve">
    <value>Amount required for pinpad deal</value>
  </data>
  <data name="ApproveTransactionOnDevice" xml:space="preserve">
    <value>Approve transaction on device</value>
  </data>
  <data name="AuthorizationCodeRequired" xml:space="preserve">
    <value>Authorization code is required. Call @number and tell them the supplier number @retailer to get the authorization code and try again.</value>
  </data>
  <data name="AwaitingForTransmission" xml:space="preserve">
    <value>Awaiting for Transmission</value>
  </data>
  <data name="BillingDealCreated" xml:space="preserve">
    <value>Billing Deal Created</value>
  </data>
  <data name="BillingDealDeactivated" xml:space="preserve">
    <value>Billing Deal Deactivated</value>
  </data>
  <data name="BillingDealDeleted" xml:space="preserve">
    <value>Billing Deal Deleted</value>
  </data>
  <data name="BillingDealIsClosed" xml:space="preserve">
    <value>Billing deal is closed</value>
  </data>
  <data name="BillingDealPaused" xml:space="preserve">
    <value>Billing Deal Paused</value>
  </data>
  <data name="BillingDealsMaxBatchSize" xml:space="preserve">
    <value>The number of billing deals for transaction batch is limited to {0}</value>
  </data>
  <data name="BillingDealsRequired" xml:space="preserve">
    <value>Billing Deals required</value>
  </data>
  <data name="BillingDealUnpaused" xml:space="preserve">
    <value>Billing Deal Unpaused</value>
  </data>
  <data name="BillingDealUpdated" xml:space="preserve">
    <value>Billing Deal Updated</value>
  </data>
  <data name="CanceledByAggregator" xml:space="preserve">
    <value>Canceled By Aggregator</value>
  </data>
  <data name="CancelledByMerchant" xml:space="preserve">
    <value>Cancelled By Merchant</value>
  </data>
  <data name="CannotCancelInvoicedTransaction" xml:space="preserve">
    <value>Cannot cancel invoiced transaction</value>
  </data>
  <data name="CanOnlyIssueInvoiceForILSTransactions" xml:space="preserve">
    <value>Can only issue invoice for ILS transactions</value>
  </data>
  <data name="CardOwnerNationalIDInvalid" xml:space="preserve">
    <value>National ID must be valid Israeli National ID</value>
  </data>
  <data name="CardOwnerNationalIDRequired" xml:space="preserve">
    <value>Card owner national ID required</value>
  </data>
  <data name="CardOwnerNationalIDRequiredButNotPresentInToken" xml:space="preserve">
    <value>Card owner national ID required, but it is not present in stored credit card token</value>
  </data>
  <data name="CardReaderInputRequired" xml:space="preserve">
    <value>Card Reader Input Required</value>
  </data>
  <data name="CheckoutFeatureMustBeEnabled" xml:space="preserve">
    <value>Checkout Feature must be enabled</value>
  </data>
  <data name="CommitedByAggregator" xml:space="preserve">
    <value>Commited By Aggregator</value>
  </data>
  <data name="Completed" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="ConfirmedByAggregator" xml:space="preserve">
    <value>Confirmed By Aggregator</value>
  </data>
  <data name="ConfirmedByProcessor" xml:space="preserve">
    <value>Confirmed By Processor</value>
  </data>
  <data name="ConsumerNameAndConsumerEmailRequired" xml:space="preserve">
    <value>Consumer Name and Consumer Email are required</value>
  </data>
  <data name="ConsumerNatIdIsNotEqTranNatId" xml:space="preserve">
    <value>Consumer National Id is not equal to credit card National Id</value>
  </data>
  <data name="CreateRequestSentToAggregator" xml:space="preserve">
    <value>Create transaction request sent to {0}</value>
  </data>
  <data name="CreditCardExpired" xml:space="preserve">
    <value>Credit Card expired</value>
  </data>
  <data name="CreditCardSecureDetailsRequired" xml:space="preserve">
    <value>CreditCardSecureDetails required</value>
  </data>
  <data name="CreditCardSecureDetailsShouldBeOmitted" xml:space="preserve">
    <value>CreditCardSecureDetails should be omitted in case if credit card token present</value>
  </data>
  <data name="CreditCardTokenChanged" xml:space="preserve">
    <value>Credit Card Token changed</value>
  </data>
  <data name="CvvRequired" xml:space="preserve">
    <value>CVV required</value>
  </data>
  <data name="CvvRequiredButStoredTokenCannotUseCvv" xml:space="preserve">
    <value>CVV required, but stored credit card token cannot use cvv</value>
  </data>
  <data name="DeviceIsProcessingTransaction" xml:space="preserve">
    <value>Device is processing transaction</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>EmailAddressRequired</value>
  </data>
  <data name="EmailSent" xml:space="preserve">
    <value>Email sent</value>
  </data>
  <data name="ExpectedValue" xml:space="preserve">
    <value>Expected @value got @input</value>
  </data>
  <data name="FailedToCancelByAggregator" xml:space="preserve">
    <value>Failed To Cancel By Aggregator</value>
  </data>
  <data name="FailedToCommitByAggregator" xml:space="preserve">
    <value>Failed To Commit By Aggregator</value>
  </data>
  <data name="FailedToConfirmByAggregator" xml:space="preserve">
    <value>Failed To Confirm By Aggregator</value>
  </data>
  <data name="FailedToConfirmByProcesor" xml:space="preserve">
    <value>Failed To Confirm By Procesor</value>
  </data>
  <data name="FailedToCreateCCToken" xml:space="preserve">
    <value>Failed To Create Credit Card Token</value>
  </data>
  <data name="FailedToCreateInvoice" xml:space="preserve">
    <value>Failed To Create Invoice</value>
  </data>
  <data name="FailedToProcessTransaction" xml:space="preserve">
    <value>Failed To Process Transaction</value>
  </data>
  <data name="InstallmentDetailsRequired" xml:space="preserve">
    <value>InstallmentDetails required</value>
  </data>
  <data name="InvoiceCreated" xml:space="preserve">
    <value>Invoice Created</value>
  </data>
  <data name="InvoiceGenerated" xml:space="preserve">
    <value>Invoice generated</value>
  </data>
  <data name="InvoiceGenerationFailed" xml:space="preserve">
    <value>Invoice generation failed</value>
  </data>
  <data name="InvoicesForResendRequired" xml:space="preserve">
    <value>Invoices are required</value>
  </data>
  <data name="InvoicesQueuedForResend" xml:space="preserve">
    <value>Invoices queued for resend</value>
  </data>
  <data name="InvoiceStateIsNotValid" xml:space="preserve">
    <value>Invoice State is not valid</value>
  </data>
  <data name="InvoicingNotDefined" xml:space="preserve">
    <value>Invoicing system is not defined</value>
  </data>
  <data name="J2NotAllowed" xml:space="preserve">
    <value>J2 deal is not allowed</value>
  </data>
  <data name="J5ExpirationDate" xml:space="preserve">
    <value>J5 Expiration date is {0}</value>
  </data>
  <data name="J5Expired" xml:space="preserve">
    <value>J5 transaction was expired</value>
  </data>
  <data name="J5NotAllowed" xml:space="preserve">
    <value>J5 deal is not allowed</value>
  </data>
  <data name="MasavFileGeneratedSuccessfully" xml:space="preserve">
    <value>Masav File generated successfully</value>
  </data>
  <data name="MasavFileWasNotGenerated" xml:space="preserve">
    <value>Masav File was not generated</value>
  </data>
  <data name="NothingToTransmit" xml:space="preserve">
    <value>Nothing to transmit</value>
  </data>
  <data name="NumberOfPaymentsShouldBeGreaterThan" xml:space="preserve">
    <value>NumberOfPayments should be greater than or equal {0}</value>
  </data>
  <data name="NumberOfPaymentsShouldBeLessThan" xml:space="preserve">
    <value>NumberOfPayments should be less than or equal {0}</value>
  </data>
  <data name="OnlySuccessfulTransactionsAreAllowed" xml:space="preserve">
    <value>Only successful transactions are allowed</value>
  </data>
  <data name="PaymentRequestCanceled" xml:space="preserve">
    <value>Payment Request canceled</value>
  </data>
  <data name="PaymentRequestCreated" xml:space="preserve">
    <value>Payment Request created</value>
  </data>
  <data name="PaymentRequestPaymentFailed" xml:space="preserve">
    <value>Payment request payment failed</value>
  </data>
  <data name="PaymentRequestPaymentSuccessed" xml:space="preserve">
    <value>Payment Request payed</value>
  </data>
  <data name="PaymentRequestStatusIsClosed" xml:space="preserve">
    <value>Payment Request Is Closed</value>
  </data>
  <data name="PaymentRequestUpdated" xml:space="preserve">
    <value>Payment Request Updated</value>
  </data>
  <data name="PaymentTypeCannotBeChanged" xml:space="preserve">
    <value>Payment type can not be changed</value>
  </data>
  <data name="PleaseCheckValues" xml:space="preserve">
    <value>Please check specified values</value>
  </data>
  <data name="ProcesingItemsLimit" xml:space="preserve">
    <value>The number of entities for processing batch is limited to {0}</value>
  </data>
  <data name="ProcessorNotDefined" xml:space="preserve">
    <value>Processor is not defined</value>
  </data>
  <data name="RejectedByAggregator" xml:space="preserve">
    <value>Failed To Process Transaction</value>
  </data>
  <data name="RejectedByProcessor" xml:space="preserve">
    <value>Failed To Process Transaction</value>
  </data>
  <data name="Required" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="TerminalForUpdateParametersRequired" xml:space="preserve">
    <value>Terminal for update parameters is required</value>
  </data>
  <data name="TerminalMustHaveBankDetailsSpecified" xml:space="preserve">
    <value>Terminal must have Bank details specified</value>
  </data>
  <data name="ThereAreNoInvoicesToResend" xml:space="preserve">
    <value>There are no invoices to resend</value>
  </data>
  <data name="ThereAreNoTransactionsToTransmit" xml:space="preserve">
    <value>There are no transactions to transmit</value>
  </data>
  <data name="TokenCreated" xml:space="preserve">
    <value>Credit Card Token Created</value>
  </data>
  <data name="TokenDeleted" xml:space="preserve">
    <value>Credit Card Token Deleted</value>
  </data>
  <data name="TotalAmountIsInvalid" xml:space="preserve">
    <value>TotalAmount of installment payments is invalid</value>
  </data>
  <data name="TransactionAlreadyHasInvoice" xml:space="preserve">
    <value>Transaction already has invoice</value>
  </data>
  <data name="TransactionCanceled" xml:space="preserve">
    <value>Transaction Canceled</value>
  </data>
  <data name="TransactionCreated" xml:space="preserve">
    <value>Transaction Created</value>
  </data>
  <data name="TransactionMustBeCompleted" xml:space="preserve">
    <value>Transaction must be completed</value>
  </data>
  <data name="TransactionsForTransmissionRequired" xml:space="preserve">
    <value>Transactions list for transmission is required</value>
  </data>
  <data name="TransactionsQueued" xml:space="preserve">
    <value>Transactions queued</value>
  </data>
  <data name="TransactionStatusIsNotValid" xml:space="preserve">
    <value>Transaction Status is not valid for this operation</value>
  </data>
  <data name="TransactionsTransmissionFailed" xml:space="preserve">
    <value>Transactions Transmission Failed</value>
  </data>
  <data name="TransactionsTransmitted" xml:space="preserve">
    <value>Transactions Transmitted</value>
  </data>
  <data name="TransactionUpdated" xml:space="preserve">
    <value>Transaction Updated</value>
  </data>
  <data name="TransmissionCancelingInProgress" xml:space="preserve">
    <value>Transmission Canceling In Progress</value>
  </data>
  <data name="TransmissionInProgress" xml:space="preserve">
    <value>Transmission In Progress</value>
  </data>
  <data name="TransmissionLimit" xml:space="preserve">
    <value>The number of transactions for transmission batch is limited to {0}</value>
  </data>
  <data name="TransmissionToProcessorFailed" xml:space="preserve">
    <value>Transmission To Processor Failed</value>
  </data>
  <data name="TransmittedByProcessor" xml:space="preserve">
    <value>Transmitted By Processor</value>
  </data>
  <data name="UserAmountRequiredValidationMessage" xml:space="preserve">
    <value>User Amount must be set to true when making transaction without amount</value>
  </data>
  <data name="UserAmountValidationMessage" xml:space="preserve">
    <value>User Amount can only be specified if Request Amount is 0</value>
  </data>
  <data name="Viewed" xml:space="preserve">
    <value>Payment Request Viewed</value>
  </data>
  <data name="WhenSpecifiedTokenCCDetailsShouldBeOmitted" xml:space="preserve">
    <value>When saved credit card token specified, credit card details should be omitted</value>
  </data>
  <data name="WhenSpecifiedTokenCCDIsNotValid" xml:space="preserve">
    <value>When saved credit card token specified, "Save Credit Card" flag is not valid</value>
  </data>
</root>